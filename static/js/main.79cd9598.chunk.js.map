{"version":3,"sources":["Components/Crud.js","Components/SignIn.js","Components/LogInError.js","App.js","serviceWorker.js","index.js"],"names":["Crud","state","newlist","ticketDetail","airLine","contactNo","id","travelDate","ticketNo","invoiceNo","passangerName","pnr","salePrice","amountInCash","amountInBank","airPayAmount","balance","profit","isEdit","agentReference","props","userName","errTravelDate","errTicketNo","errInvoiceNo","errPassangerName","errAirLine","errPnr","errSalePrice","errAirPayAmount","errTravelDateMsg","errTicketNoMsg","errInvoiceNoMsg","errPassangerNameMsg","errPnrMsg","errAirLineMsg","errSalePriceMsg","errAirPayAmountMsg","HandlerChange","event","setState","target","name","type","parseFloat","value","checkIsEmpty","itemToCheckIsEmpty","resetErrorState","_","handlerFromValidation","isNaN","HandlerAddRecord","e","preventDefault","Update","Add","fetch","then","alert","HandlerFetchDataFromDB","HandlerResetState","GetBalance","HandlerDeleteRecord","HandlerEditRecord","t","dateFormat","dueAmount","HandlerGetDataEnteryForm","style","border","width","marginLeft","onChange","color","placeholder","onBlur","background","onClick","HandlerGetListOfRecords","className","map","key","Date","toLocaleDateString","console","log","response","json","data","this","Component","SignIn","userObjArray","userPWD","_isAuthorized","HandlerCheckAuthorization","c","find","uo","htmlFor","onAutho","LogInError","App","isAuthorized","HandlerSetAuthorization","HandlerLogOut","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.79cd9598.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./table.css\";\r\n\r\nimport dateFormat from \"dateformat\";\r\n\r\nclass Crud extends Component {\r\n  state = {\r\n    newlist: [],\r\n    ticketDetail: [],\r\n    airLine: \"\",\r\n    contactNo: \"\",\r\n    id: 0,\r\n    travelDate: \"\",\r\n    ticketNo: \"\",\r\n    invoiceNo: \"\",\r\n    passangerName: \"\",\r\n    pnr: \"\",\r\n    salePrice: 0,\r\n    amountInCash: 0,\r\n    amountInBank: 0,\r\n    airPayAmount: 0,\r\n    balance: 0,\r\n    profit: 0,\r\n    isEdit: false,\r\n    agentReference: this.props.userName,\r\n\r\n    errTravelDate:true,\r\n    errTicketNo:true,\r\n    errInvoiceNo: true,\r\n    errPassangerName: true,\r\n    errAirLine:true,\r\n    errPnr: true,\r\n    errSalePrice:true,\r\n    errAirPayAmount:true,\r\n\r\n    errTravelDateMsg:\"*\",\r\n    errTicketNoMsg :\"*\",\r\n    errInvoiceNoMsg:\"*\",\r\n    errPassangerNameMsg:\"*\",\r\n    errPnrMsg:\"*\",\r\n    errAirLineMsg:\"*\",\r\n    errSalePriceMsg:\"Sale Price should be more then 0\",\r\n    errAirPayAmountMsg:\"Air Pay should be more then 0\",\r\n\r\n  };\r\n\r\n\r\n \r\n  HandlerFetchDataFromDB() {\r\n    fetch(\"http://localhost:4000/GetAll\")\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => this.setState({ ticketDetail: data }));\r\n  }\r\n  componentDidMount() {\r\n    this.HandlerFetchDataFromDB();\r\n    // console.log(this.state.ticketDetail);\r\n  }\r\n\r\n  HandlerChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]:\r\n        event.target.type === \"number\"\r\n          ? parseFloat(event.target.value)\r\n          : event.target.value,\r\n    });\r\n  };\r\n\r\n\r\n\r\n  checkIsEmpty = (itemToCheckIsEmpty) =>{\r\n    return (itemToCheckIsEmpty===\"\") ? false:true;\r\n\r\n}\r\n\r\nresetErrorState = _ =>{\r\n  this.setState({\r\n    errTravelDate:true,\r\n    errTicketNo:true,\r\n    errInvoiceNo: true,\r\n    errPassangerName: true,\r\n    errAirLine:true,\r\n    errPnr: true,\r\n    errSalePrice:true,\r\n    errAirPayAmount:true,\r\n  })\r\n}\r\n  handlerFromValidation = _ =>{\r\n    this.resetErrorState();\r\n   \r\n    let {errTravelDate,errTicketNo,errPassangerName,errInvoiceNo,errAirPayAmount,errSalePrice,errPnr,errAirLine} = this.state;\r\n    errTravelDate=this.checkIsEmpty(this.state.travelDate);\r\n    errTicketNo=this.checkIsEmpty(this.state.ticketNo);\r\n    errPassangerName=this.checkIsEmpty(this.state.passangerName);\r\n    errInvoiceNo=this.checkIsEmpty(this.state.invoiceNo);\r\n    errPnr=this.checkIsEmpty(this.state.pnr);\r\n    errAirLine=this.checkIsEmpty(this.state.airLine);\r\n    errAirPayAmount=(this.state.airPayAmount===0|| this.state.airPayAmount===isNaN)?false:true;\r\n    errSalePrice=(this.state.salePrice===0||this.state.salePrice===isNaN)?false:true;\r\n    this.setState({\r\n      errTravelDate,errTicketNo,errPassangerName,errInvoiceNo,errAirPayAmount,errSalePrice,errPnr,errAirLine\r\n    });\r\n   \r\n   \r\n   return (errTravelDate && errTicketNo && errPassangerName && errInvoiceNo && errAirPayAmount && errSalePrice && errPnr && errAirLine) ? true :false;\r\n\r\n  }\r\n  HandlerAddRecord = (e) => {\r\n    e.preventDefault();\r\n    this.state.isEdit ? this.Update() : this.Add();\r\n    \r\n  };\r\n  Update = () => {\r\n   const isAllowedToUpdate= this.handlerFromValidation();\r\n   \r\n     if (isAllowedToUpdate){ \r\n  \r\n    \r\n    fetch(`http://localhost:4000/Update?travelDate=${this.state.travelDate}\r\n         &ticketNo=${this.state.ticketNo}&invoiceNo=${this.state.invoiceNo}\r\n         &passangerName=${this.state.passangerName}&pnr=${this.state.pnr}\r\n         &airLine=${this.state.airLine}&contactNo=${this.state.contactNo}\r\n         &airPayAmount=${this.state.airPayAmount}&salePrice=${this.state.salePrice}\r\n         &amountInCash=${this.state.amountInCash}&amountInBank=${this.state.amountInBank}\r\n         &dueAmount=${this.state.balance}&profit=${this.state.profit}\r\n         &agentReference=${this.state.agentReference}&id=${this.state.id}\r\n    `).then(alert(\"Record Has Been Updated!!\"));\r\n\r\n    this.setState({ isEdit: false });\r\n\r\n    this.HandlerFetchDataFromDB();\r\n    this.HandlerResetState();\r\n    }\r\n    else{alert('Please Enter Proper Data!!!');return}\r\n    \r\n  };\r\n\r\n  Add = (_) => {\r\n   \r\n    const isAllowedToUpdate= this.handlerFromValidation();\r\n    // alert(`value of isAllowedToupdate = ${isAllowedToUpdate}`);\r\n     if (isAllowedToUpdate){ \r\n    fetch(`http://localhost:4000/Add?travelDate=${this.state.travelDate}\r\n         &ticketNo=${this.state.ticketNo}&invoiceNo=${this.state.invoiceNo}\r\n         &passangerName=${this.state.passangerName}&pnr=${this.state.pnr}\r\n         &airLine=${this.state.airLine}&contactNo=${this.state.contactNo}\r\n         &airPayAmount=${this.state.airPayAmount}&salePrice=${this.state.salePrice}\r\n         &amountInCash=${this.state.amountInCash}&amountInBank=${this.state.amountInBank}\r\n         &dueAmount=${this.state.balance}&profit=${this.state.profit}\r\n         &agentReference=${this.state.agentReference}\r\n    `)\r\n    .then(alert(\"Record Has Been Inserted!!!\"));\r\n  \r\n    this.HandlerResetState();\r\n    this.HandlerFetchDataFromDB();\r\n  \r\n  }\r\n   \r\n    else{alert('Please Enter Proper Data!!!');return}\r\n  };\r\n  HandlerResetState() {\r\n    this.setState({\r\n      id: 0,\r\n      travelDate: \"\",\r\n      ticketNo: \"\",\r\n      invoiceNo: \"\",\r\n      passangerName: \"\",\r\n      pnr: \"\",\r\n      salePrice: 0,\r\n      amountInCash: 0,\r\n      amountInBank: 0,\r\n      airPayAmount: 0,\r\n      balance: 0,\r\n      profit: 0,\r\n      contactNo: \"\",\r\n      airLine: \"\",\r\n    });\r\n  }\r\n  GetBalance = (_) => {\r\n    this.setState({\r\n      balance:\r\n        parseFloat(this.state.salePrice) -\r\n        (parseFloat(this.state.amountInCash) +\r\n          parseFloat(this.state.amountInBank)),\r\n      profit:\r\n        parseFloat(this.state.salePrice) - parseFloat(this.state.airPayAmount),\r\n    });\r\n    //\r\n  };\r\n  HandlerDeleteRecord = (id) => {\r\n    fetch(`http://localhost:4000/Delete?id=${id}`).then(\r\n      \"Record has been deleted !!!\"\r\n    );\r\n    this.HandlerFetchDataFromDB();\r\n  };\r\n  HandlerEditRecord = (t) => {\r\n    this.setState({\r\n      id: t.id,\r\n      travelDate: dateFormat(t.travelDate, \"yyyy-mm-dd\"),\r\n      ticketNo: t.ticketNo,\r\n      invoiceNo: t.invoiceNo,\r\n      passangerName: t.passangerName,\r\n      pnr: t.pnr,\r\n      salePrice: t.salePrice,\r\n      amountInCash: t.amountInCash,\r\n      amountInBank: t.amountInBank,\r\n      airPayAmount: t.airPayAmount,\r\n      balance: t.dueAmount,\r\n      profit: t.profit,\r\n      isEdit: true,\r\n      contactNo: t.contactNo,\r\n      airLine: t.airLine,\r\n    });\r\n  };\r\n\r\n  HandlerGetDataEnteryForm = (_) => {\r\n    const dataForm = (\r\n      <table\r\n        style={{ border: \"1px solid black\", width: \"auto\", marginLeft: \"5%\" }}\r\n      >\r\n        <tr>\r\n          <td>\r\n            <label>Travel Date:</label>\r\n            <br />\r\n            <input\r\n              type=\"date\"\r\n              name=\"travelDate\"\r\n              value={this.state.travelDate}\r\n              onChange={this.HandlerChange}\r\n            />\r\n            {(!this.state.errTravelDate)?<span style={{color:\"red\"}}>{this.state.errTravelDateMsg}</span>:null}\r\n          </td>\r\n\r\n          <td>\r\n            <label>Ticket No:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"ticketNo\"\r\n              value={this.state.ticketNo}\r\n              placeholder=\"Ticket No\"\r\n              onChange={this.HandlerChange}\r\n            />\r\n           \r\n            \r\n             {(!this.state.errTicketNo)?<span style={{color:\"red\"}}>{this.state.errTicketNoMsg}</span>:null}\r\n          </td>\r\n          <td>\r\n            <label>Invoice No:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"invoiceNo\"\r\n              value={this.state.invoiceNo}\r\n              placeholder=\"Invoice No\"\r\n              onChange={this.HandlerChange}\r\n            />\r\n             {(!this.state.errInvoiceNo)?<span style={{color:\"red\"}}>{this.state.errInvoiceNoMsg}</span>:null}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <label>Passanger Name:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"passangerName\"\r\n              value={this.state.passangerName}\r\n              placeholder=\"Passanger Name\"\r\n              onChange={this.HandlerChange}\r\n            />\r\n             {(!this.state.errPassangerName)?<span style={{color:\"red\"}}>{this.state.errPassangerNameMsg}</span>:null}\r\n          </td>\r\n\r\n          <td>\r\n            <label>PNR:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"pnr\"\r\n              value={this.state.pnr}\r\n              placeholder=\"PNR\"\r\n              onChange={this.HandlerChange}\r\n            />\r\n             {(!this.state.errPnr)?<span style={{color:\"red\"}}>{this.state.errTicketNoMsg}</span>:null}\r\n          </td>\r\n          <td>\r\n            <label>Air Line:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"airLine\"\r\n              value={this.state.airLine}\r\n              placeholder=\"Air Line\"\r\n              onChange={this.HandlerChange}\r\n            />\r\n            {(!this.state.errAirLine)?<span style={{color:\"red\"}}>{this.state.errAirLineMsg}</span>:null}\r\n          \r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <label>Contact No:</label>\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"contactNo\"\r\n              value={this.state.contactNo}\r\n              placeholder=\"Contact No\"\r\n              onChange={this.HandlerChange}\r\n            />\r\n          </td>\r\n        </tr>\r\n        <tr></tr>\r\n        <tr>\r\n          <td>\r\n            <label>Air Pay:</label>\r\n            <br />\r\n            <input\r\n              // style={{ width: \"50px\" }}\r\n              type=\"number\"\r\n              name=\"airPayAmount\"\r\n              value={this.state.airPayAmount}\r\n              onChange={this.HandlerChange}\r\n            />\r\n            <br/>\r\n            {(!this.state.errAirPayAmount)?<span style={{color:\"red\"}}>{this.state.errAirPayAmountMsg}</span>:null}\r\n          </td>\r\n          <td>\r\n            <label>Price:</label>\r\n            <br />\r\n            <input\r\n              // style={{ width: \"50px\" }}\r\n              type=\"number\"\r\n              name=\"salePrice\"\r\n              value={this.state.salePrice}\r\n              onChange={this.HandlerChange}\r\n            /><br/>\r\n            {(!this.state.errSalePrice)?<span style={{color:\"red\"}}>{this.state.errSalePriceMsg}</span>:null}\r\n          </td>\r\n\r\n          <td>\r\n            <label>Cash:</label>\r\n            <br />\r\n            <input\r\n              // style={{ width: \"50px\" }}\r\n              name=\"amountInCash\"\r\n              value={this.state.amountInCash}\r\n              type=\"number\"\r\n              onChange={this.HandlerChange}\r\n              onBlur={this.GetBalance}\r\n            />\r\n          </td>\r\n        </tr>\r\n        <tr></tr>\r\n        <tr></tr>\r\n        <tr></tr>\r\n        <tr>\r\n          <td>\r\n            <label>Bank:</label>\r\n            <br />\r\n            <input\r\n              style={{ width: \"70px\" }}\r\n              name=\"amountInBank\"\r\n              value={this.state.amountInBank}\r\n              type=\"number\"\r\n              onChange={this.HandlerChange}\r\n              onBlur={this.GetBalance}\r\n            />\r\n          </td>\r\n          <td></td>\r\n          <td>\r\n            <label>Balnce Payment: </label>\r\n            <br />\r\n            <span style={{ background: \"red\", width: \"50px\" }}>\r\n              {this.state.balance}\r\n            </span>\r\n          </td>\r\n          <td>\r\n            <label>Profit:</label>\r\n            <br />\r\n            <span style={{ background: \"Green\" }}>{this.state.profit}</span>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr>\r\n          <td>\r\n            <td>\r\n              <button onClick={this.HandlerAddRecord}>\r\n                {this.state.isEdit ? \"Update\" : \"Add\"}\r\n              </button>\r\n            \r\n            </td>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    );\r\n    return dataForm;\r\n  };\r\n\r\n  HandlerGetListOfRecords = (_) => {\r\n    const listForm = (\r\n      <div>\r\n        <h1>List Of Tickets:</h1> <hr />\r\n        <table className=\"myTable table-striped\">\r\n          <thead>\r\n            <th>Name</th>\r\n            <th>Ticket No</th>\r\n            <th>PNR</th>\r\n            <th>Traveling Date</th>\r\n            <th>Air Pay</th>\r\n            <th>Sale Price</th>\r\n            <th>Due Amount</th>\r\n            <th>Profit</th>\r\n            <th>Action</th>\r\n          </thead>\r\n\r\n          {this.state.ticketDetail.map((t) => (\r\n            <tr key={t.id} className=\"myTable table-striped\">\r\n              <td>{t.passangerName}</td>\r\n              <td>{t.ticketNo}</td>\r\n              <td>{t.pnr}</td>\r\n              <td>{new Date(t.travelDate).toLocaleDateString()}</td>\r\n              <td>{t.airPayAmount}</td>\r\n              <td>{t.salePrice}</td>\r\n              <td>{t.dueAmount}</td>\r\n              <td>{t.profit}</td>\r\n              <td>\r\n                <button onClick={() => this.HandlerEditRecord(t)}>Edit</button>\r\n              </td>\r\n              <td>\r\n                <button onClick={() => this.HandlerDeleteRecord(t.id)}>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </table>\r\n        <button onClick={() => console.log(this.state.newlist)}>\r\n          Click Me\r\n        </button>\r\n      </div>\r\n    );\r\n    return listForm;\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.HandlerGetDataEnteryForm()}\r\n        {this.HandlerGetListOfRecords()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Crud;\r\n","import React, { Component } from 'react';\r\n\r\nclass SignIn extends Component {\r\n    state = {  \r\n\r\n        userObjArray:[{userName:\"Awais\",userPWD:\"Awais@123\"}\r\n        ,{userName:\"Saqib\",userPWD:\"Saqib@123\"}\r\n        ,{userName:\"Sherwani\",userPWD:\"Sherwani@123\"}\r\n    ],\r\n        userName:'',\r\n        userPWD:'',\r\n        _isAuthorized:false,\r\n       \r\n       \r\n    }\r\n\r\n\r\n    HandlerChange = (event) => {\r\n        this.setState({\r\n          [event.target.name]:\r\n            event.target.type === \"number\"\r\n              ? parseFloat(event.target.value)\r\n              : event.target.value,\r\n        });\r\n      };\r\n      HandlerCheckAuthorization = () =>{\r\n          const {userName,userPWD} = this.state;\r\n          let c=this.state.userObjArray.find( uo => (uo.userName===userName && uo.userPWD===userPWD))\r\n          this.setState({\r\n            _isAuthorized:(typeof c !== 'undefined') ?  true:false,\r\n           \r\n          }); \r\n         \r\n        //   console.log(this.userName)\r\n          \r\n\r\n\r\n      }\r\n    render() { \r\n        console.log(this.props)\r\n        return (  \r\n            \r\n            <div>\r\n                <label htmlFor=\"\">User Name:</label>:\r\n                <input type=\"text\" placeholder=\"User Name\" name=\"userName\"\r\n                onChange={this.HandlerChange}/>\r\n                <label htmlFor=\"\">User Password:</label>:\r\n                <input type=\"text\" placeholder=\"User Password\" name=\"userPWD\"\r\n                onChange={this.HandlerChange} \r\n                onBlur={this.HandlerCheckAuthorization}/>\r\n\r\n                <button onClick = {() => this.props.onAutho(this.state._isAuthorized,this.state.userName)}>Log In</button>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default SignIn;","import React, { Component } from 'react';\r\n\r\nclass LogInError extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( <div>\r\n            <h1> User Name or Password Is Incorrect!!!!</h1>\r\n        </div> );\r\n    }\r\n}\r\n \r\nexport default LogInError ;","import React, { Component } from 'react';\nimport Crud from './Components/Crud';\nimport SignIn from './Components/SignIn';\nimport LogInError  from './Components/LogInError';\nclass App extends Component {\n  state = {  \n    userName:'',\n    isAuthorized:0,\n  }\n\n  HandlerSetAuthorization = (isAuthorized,userName) =>{\n    // alert('From user App moudule HandlerSetAuthorization');\n    // console.log(`value of userName is = ${userName} and isAuthorized is = ${isAuthorized}`);\n      this.setState({isAuthorized:(isAuthorized)?1:2,userName});\n      // console.log(this.state.isAuthorized);\n  }\n  HandlerLogOut = _ =>{\n    this.setState({isAuthorized:0});\n  }\n  render() { \n    return (  \n      <div>\n            {(this.state.isAuthorized===0)  ? <SignIn onAutho={this.HandlerSetAuthorization}/>:null}\n            {(this.state.isAuthorized===1)? \n            <div>\n                 <h1>Travel Agency!!!</h1>{<h3>Welcome Mr : {this.state.userName}</h3>}\n                 <button onClick={this.HandlerLogOut}>Log Out</button>\n            </div> \n           :null}\n           {(this.state.isAuthorized===1)?<Crud userName={this.state.userName}/>:(this.state.isAuthorized===2)?<LogInError/>:null}\n           \n\n      </div>\n      \n    );\n  }\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}